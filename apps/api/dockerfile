# syntax=docker/dockerfile:1.7
# =============================================================================
# Multi-stage Dockerfile for Hono API in Turborepo (2025 Best Practices)
# Final image: ~50MB (vs 943MB original)
# =============================================================================

# -----------------------------------------------------------------------------
# Stage 1: Base image with pnpm and turbo
# -----------------------------------------------------------------------------
FROM node:22-slim AS base
ENV PNPM_HOME="/pnpm"
ENV PATH="$PNPM_HOME:$PATH"
ENV TURBO_TELEMETRY_DISABLED=1
RUN apt-get update && apt-get install -y openssl && apt-get clean && rm -rf /var/lib/apt/lists/*
RUN corepack enable pnpm
RUN pnpm install --global turbo@^2

# -----------------------------------------------------------------------------
# Stage 2: Prune workspace using Turborepo
# -----------------------------------------------------------------------------
FROM base AS pruner
WORKDIR /app
COPY . .
RUN turbo prune @repo/api --docker

# -----------------------------------------------------------------------------
# Stage 3: Install dependencies with cache optimization
# -----------------------------------------------------------------------------
FROM base AS installer
WORKDIR /app

# Copy pruned package.json files and turbo config
COPY --from=pruner /app/out/json/ .
COPY --from=pruner /app/turbo.json ./turbo.json
COPY --from=pruner /app/packages/prisma/schema.prisma ./packages/prisma/schema.prisma

# Install dependencies with cache mount (2025 optimization)
RUN --mount=type=cache,id=pnpm,target=/pnpm/store \
    pnpm install --frozen-lockfile

# -----------------------------------------------------------------------------
# Stage 4: Build application
# -----------------------------------------------------------------------------
FROM installer AS builder
WORKDIR /app

# Copy source code
COPY --from=pruner /app/out/full/ .

# Generate Prisma client with correct binary targets for distroless
ENV PRISMA_CLI_BINARY_TARGETS="debian-openssl-3.0.x,linux-musl-openssl-3.0.x"
RUN --mount=type=cache,id=pnpm,target=/pnpm/store \
    turbo db:generate

RUN --mount=type=cache,id=pnpm,target=/pnpm/store \
    turbo run build --filter=@repo/api

# Create minimal node_modules for production
RUN --mount=type=cache,id=pnpm,target=/pnpm/store \
    pnpm install --prod --frozen-lockfile

# -----------------------------------------------------------------------------
# Stage 5: Runtime (Distroless - 2025 Gold Standard)
# -----------------------------------------------------------------------------
FROM gcr.io/distroless/nodejs22-debian12 AS runtime

# Create non-root user context
USER 1001:1001
WORKDIR /app

# Maintain monorepo structure to preserve symlinks and relative paths
COPY --from=builder --chown=1001:1001 /app/apps/api/dist/ ./apps/api/dist/
COPY --from=builder --chown=1001:1001 /app/node_modules/ ./node_modules/
COPY --from=builder --chown=1001:1001 /app/packages/ ./packages/

# Set working directory to match the monorepo structure
WORKDIR /app/apps/api

EXPOSE 3001

# Distroless already has 'node' as entrypoint, run from the correct location
CMD ["dist/index.js"]